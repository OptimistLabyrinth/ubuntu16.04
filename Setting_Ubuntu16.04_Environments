
***** AFTER SUCCESSFULLY INSTALLING UBUNTU 16.04 *****
***** AFTER SUCCESSFULLY INSTALLING UBUNTU 16.04 *****
***** AFTER SUCCESSFULLY INSTALLING UBUNTU 16.04 *****
***** AFTER SUCCESSFULLY INSTALLING UBUNTU 16.04 *****
***** AFTER SUCCESSFULLY INSTALLING UBUNTU 16.04 *****

<mistake on Terminal CLI> 
	:-> when pressed "ctrl + s"(=freezes), press "ctrl + q"(=unfreezes) 

1. System Settings > Appearance, Brightness & Lock, Display, Keyboard, Mouse & Touchpad, Power, Sound, Security & Privacy 
2. System Settings > Software & Updates > Other_Software > check 'Canonical Partners'

3. 	$ sudo apt update
	$ sudo apt upgrade

4. System Settings > Language Support (Then Wait until the Installation Finishes)

5. Linux Graphics Driver 

	$ sudo add-apt-repository ppa:graphics-drivers/ppa
	$ sudo apt update
	$ sudo apt upgrade

   System Settings > Software & Updates > Additional Drivers > check [proper nvidia graphics driver]

6. 	$ sudo apt update
	$ sudo apt install ubuntu-restricted-extras

7-1. 	$ sudo apt update
	$ sudo apt install unity-tweak-tool

7-2. install 'gedit-plugins'

	$ sudo apt update
	$ sudo apt install gedit-plugins gedit-developer-plugins gedit-latex-plugin gedit-source-code-browser-plugin

8. Install Libreoffice latest version 5.4

 	$ sudo apt remove --purge --auto-remove libreoffice*
	$ sudo apt autoclean
	$ sudo apt clean

	$ sudo add-apt-repository ppa:libreoffice/libreoffice-5-4
	$ sudo apt update
	$ sudo apt install libreoffice

9. Ubuntu Software > GIMP, VLC, bleachbit, GParted

10. install 'Google Chrome' 

	$ wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
	$ sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
	$ sudo apt update
	$ sudo apt install google-chrome-stable

    Go to chrome://settings > Advanced Settings > System > uncheck 'background app keep going after exit'

***** Too Slow *****
11. install 'Spotify for Ubuntu' 

	$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0DF731E45CE24F27EEEB1450EFDC8610341D9410
	$ echo deb http://repository.spotify.com stable non-free | sudo tee /etc/apt/sources.list.d/spotify.list
	$ sudo apt update
	$ sudo apt install spotify-client
********************

12. install 'Lightworks Free' 

	* link : https://www.lwks.com/index.php?option=com_lwks&view=download&Itemid=206

	$ sudo apt update
	$ cd ~/Downloads
	$ sudo dpkg -i lwks
	$ sudo apt install -f
	$ sudo dpkg -i lwks

13.	$ sudo apt update
 	$ sudo apt install htop 

14. install 'Adobe Flash Plugins' 

	$ sudo apt update
	$ sudo apt install adobe-flashplugin

15. Zoom in & Zoom out 
    System Settings > Keyboard > shortcuts > Universal Access > (Here) 
    (1) Zoom in : ctrl + = 
    (2) Zoom out : ctrl + - 
    Both of above buttons are just next to backspace button. Then you can use with number-keypad +/- buttons. 

16. Modity Mouse Scroll Wheel Speed

	* link : http://imwheel.sourceforge.net/imwheel.1.html
	* link : https://minjejeon.github.io/learningstock/2016/07/08/change-mouse-wheel-speed-using-imwheel.html

	$ sudo apt update
	$ sudo apt install imwheel
	$ sudo gedit /etc/X11/imwheel/startup.conf => ‘IMWHEEL_START=1’
	$ sudo gedit ~/.imwheelrc 
		==>> 
		".*"
		None,      Up,   Button4, 6 
		None,      Down, Button5, 6 
		<<== 
	$ imwheel -k



*************************************************************************************************************************************
17. Ubuntu - 16.04 한글 설정

	기본으로 설치시 English만 설치되었다고 가정하고 한글 설치와 한영 전환 설정하는 것을 어떻게 하는지 알아보자.
	한글 설치

    		sudo apt-get install fcitx-hangul로 한글을 설치한다.
    		System Settings > Language Support를 실행해서 아직 완전히 설치되지 않다고 표시되는데 잠시 기다려서 모두 설치한다.
    		Keyboard input method system:을 ibus가 아닌 fcitx로 변경한다.
    		재부팅한다.

	한영 전환 설정
	Shortcut 설정

    		System Settings > Keyboard > Shortcuts Tab > Typing을 선택한다.
    		Switch to Next source, Switch to Previous sourc, Compose Key, Alternative Characters Key를 모두 Disabled로 선택한다. Disabled로 선택하기 위해서는 backspace를 누르면 된다.
    		Compose Key의 Disabled를 길게 눌러 Right Alt를 선택한다.
    		Switch to next source는 한영키를 눌러 Multikey를 선택한다. 반드시 Compose Key 설정이 먼저되어야 Multikey를 선택할 수 있다.
    		System Setting 윈도우를 닫고 상단 메뉴바 오른쪽의 입력기 선택하는 것을 본다. 키보드 표시가 된 것이 fcitx이다. fcitx아이콘을 눌러서 Configure Current Input Method를 선택한다.
    		Keyboard-English(US)가 있다면 +를 눌러 Hangul을 추가한다. (Uncheck “Only Show Current Language”). Korean이 아닌 Hangul이여야 한다.
    		Global Config tab에서 Trigger Input Method는 한/영키를 눌러 Multikey로 설정(왼쪽 오른쪽 모두)하고 Extrakey for trigger input method는 Disabled로 설정한다. (Mac에서는 command key이므로 대신 shift+space를 선택한다.)
    		Global Config tab에서 Program > Share State Among Window > All을 선택한다.

	테스트

    		log out을 한후 다시 log in을 한다.
    		한글/영어가 한영키로 전환되는지 확인한다.
*************************************************************************************************************************************



18. install TLP for Linux 

	$ sudo add-apt-repository ppa:linrunner/tlp
	$ sudo apt update
	$ sudo apt install tlp tlp-rdw
	$ sudo tlp start

19. Enable Recursive Search 

	$ gsettings set org.gnome.nautilus.preferences enable-interactive-search false

20. Set up Firewall (UFW)
	* link : https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-with-ufw-on-ubuntu-16-04 

	$ sudo ufw default deny incoming
	$ sudo ufw default allow outgoing
	$ sudo gedit /etc/default/ufw
		==>> 
		...
		IPV6=yes
		...
		<<==

	$ ip addr

	$ sudo ufw allow ssh
	$ sudo ufw allow http
	$ sudo ufw allow https
	$ sudo ufw allow ftp
	$ sudo ufw enable
	$ sudo ufw status numbered

21. install codecs and DVD player 

	$ sudo apt-get install ffmpeg gxine libdvdread4 icedax tagtool libdvd-pkg easytag id3tool lame libxine2-ffmpeg nautilus-script-audio-convert libmad0 mpg321 libavcodec-extra gstreamer1.0-libav

	*** link : https://sites.google.com/site/easylinuxtipsproject/multimedia

	$ sudo apt install libdvd-pkg
	$ sudo dpkg-reconfigure libdvd-pkg
	$ sudo apt-mark hold libdvd-pkg libdvdcss2 libdvdcss-dev

22. install compress/decompress tools 

	$ sudo apt-get install p7zip-rar p7zip-full unace unrar zip unzip sharutils rar uudeview mpack arj cabextract file-roller

23. Tools/Tweaks for Laptop Power Management

	$ sudo apt-get install laptop-mode-tools

**** For Later Use (optional) *****
24. To Reset Unity Settings 

	$ sudo apt install dconf-tools
	$ dconf reset -f /org/compiz/
	$ setsid unity
	$ unity --reset-icons
***********************************

25. Conky Collections 
	* link : http://www.noobslab.com/2012/07/conky-collection-for-ubuntulinux.html 

26. install 'Kodi' on Ubuntu 16.04

	$ sudo apt update
	$ sudo apt install software-properties-common
	$ sudo add-apt-repository ppa:team-xbmc/ppa
	$ sudo apt update
	$ sudo apt install kodi

27. Show hidden startup apps

	$ sudo sed -i "s/NoDisplay=true/NoDisplay=false/g" /etc/xdg/autostart/*.desktop

28. Change Swapiness Value

	$ cat /proc/sys/vm/swappiness
	$ sudo gedit /etc/sysctl.conf
		==>>
		# Swappiness Value 
		vm.swappiness=10
		<<==
	$ cat /proc/sys/vm/swappiness

29. Ubuntu Best Indicators 

	(1) CPU clock frequency 
	$ sudo apt update
	$ sudo apt install indicator-cpufreq

	(2) Weather Indicator 
	$ sudo add-apt-repository ppa:atareao/atareao
	$ sudo apt update
	$ sudo apt install my-weather-indicator

	(3) System Indicator 
	$ sudo apt update
	$ sudo apt install indicator-multiload

	(4) Caffeine
	$ sudo add-apt-repository ppa:caffeine-developers/ppa
	$ suod apt update
	$ sudo apt install caffeine

	(5) Key Lock Monitor
	$ sudo add-apt-repository ppa:tsbarnes/indicator-keylock
	$ sudo apt update
	$ sudo apt install indicator-keylock

	(6) Classic Menu Style
	$ sudo apt-add-repository ppa:diesch/testing
	$ sudo apt update
	$ sudo apt install classicmenu-indicator

	(7) Recent Notifications
	$ sudo add-apt-repository ppa:jconti/recent-notifications
	$ sudo apt update
	$ sudo apt install indicator-notifications

	(8) Touch Pad
	$ sudo add-apt-repository ppa:atareao/atareao
	$ sudo apt update
	$ sudo apt install touchpad-indicator

	(9) Hardware Temperature
	$ sudo apt install lm-sensors hddtemp
	$ sudo apt install psensor

30. install 'PPA/Key Manager'

	$ sudo add-apt-repository ppa:webupd8team/y-ppa-manager
	$ sudo apt update
	$ sudo apt install ppa-purge y-ppa-manager

31. install 'Winehq & PlayOnLinux' + 'Crossover'
	* link : http://ubuntuhandbook.org/index.php/2017/10/wine-stable-2-0-3-released-with-various-fixes-how-to-install/
	* link : https://sysads.co.uk/2016/05/16/how-to-install-playonlinux-4-2-10-on-ubuntu-16-04/

	(1) Winehq 
	$ wget -nc https://dl.winehq.org/wine-builds/Release.key && sudo apt-key add Release.key
	$ sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/
	$ sudo apt update
	$ sudo apt-get install --install-recommends winehq-stable

	(2) PlayOnLinux 
	$ sudo add-apt-repository ppa:noobslab/apps
	$ sudo apt update
	$ sudo apt install playonlinux

31. install Oracle-jdk
	* link : https://medium.com/@shaaslam/how-to-install-oracle-java-9-in-ubuntu-16-04-671e598f0116
	* link : https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16-04

	$ sudo add-apt-repository ppa:webupd8team/java
	$ sudo apt update

	$ sudo apt install oracle-java9-installer
	$ sudo update-alternatives --config java
	$ sudo gedit /etc/environment => JAVA_HOME="/usr/lib/jvm/java-9-oracle"
	$ export JAVA_HOME= ~ 
	$ echo $JAVA_HOME






********** LAMP ********** LAMP ********** LAMP ********** LAMP ********** LAMP ********** LAMP ********** LAMP ********** LAMP ****

*** link : https://linode.com/docs/web-servers/lamp/install-lamp-stack-on-ubuntu-16-04/ 
* link : https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04 
* link : https://www.rosehosting.com/blog/how-to-install-lamp-on-ubuntu-16-04/ 
* link : https://httpd.apache.org/docs/2.4/mod/core.html 

	$ apt list --installed



32. install 'Apache Server' 

	$ sudo apt update
	$ sudo apt upgrade
	$ sudo apt install --install-suggests apache2*

	$ sudo gedit /etc/apache2/mods-enabled/dir.conf
		==>>
		<IfModule mod_dir.c>
		    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
		</IfModule>
		<<== 

	***** Getting Ready as a Application Server or Web Server *****
	$ sudo gedit /etc/apache2/apache2.conf
		==>>
		KeepAlive On
		MaxKeepAliveRequests 100
		KeepAliveTimeout 5
		<<==
	$ sudo gedit /etc/apache2/mods-available/mpm_prefork.conf
		==>> 
		
		<IfModule mpm_prefork_module>
        		StartServers            5
		        MinSpareServers         3
		        MaxSpareServers         40
		        MaxRequestWorkers       200
		        MaxConnectionsPerChild  10000
		</IfModule>

		<<== 
	$ sudo a2dismod mpm_event 
	$ sudo a2enmod mpm_prefork
	$ sudo systemctl restart apache2
	$ sudo systemctl enable apache2

	***** This is a process to create private server *****
	$ sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf
	$ sudo gedit /etc/apache2/sites-available/example.com.conf
		==>> 

		<Directory /var/www/html/example.com/public_html>
        		Require all granted
		</Directory>
		<VirtualHost *:80>
			ServerName example.com
			ServerAlias www.example.com
			ServerAdmin webmaster@localhost
			DocumentRoot /var/www/html/example.com/public_html

			ErrorLog /var/www/html/example.com/logs/error.log
			CustomLog /var/www/html/example.com/logs/access.log combined

		</VirtualHost>

		<<== 

	$ sudo mkdir -p /var/www/html/example.com/{public_html,logs}
	$ sudo a2ensite example.com.conf
	$ sudo a2dissite 000-default.conf
	$ sudo systemctl reload apache2

	**** Adjust the Firewall to Allow Web Traffic *****
	$ sudo ufw app list
	$ sudo ufw app info "Apache Full"
	$ sudo ufw allow in "Apache Full"

	***** check if apache_service is successfully installed ****
	go to ::: http://your_server_IP_address
	*****	*****	*****	*****	*****	*****	*****	*****
	
	**** APACHE2 connector *****
	$ sudo apt update
	$ sudo apt install libassa-3.5-5v5

33. install 'MySQL' 

	$ sudo apt update
	$ sudo apt upgrade
	$ sudo apt-get install --install-suggests mysql-server mysql-client mysql-workbench

	***********************************
	*** [ Kerberos Authentication ] ***
	Kerberos Principal : yks93
	Kerberos Server Hostname : pentium-B960
	Kerberos Administrative Server : pentium-B960
	***********************************

	$ mysql_secure_installation



	* link : https://dev.mysql.com/doc/refman/5.7/en/option-files.html
	* link : https://zetawiki.com/wiki/MySQL_%EC%84%A4%EC%A0%95%ED%8C%8C%EC%9D%BC_my.cnf
	* link : https://www.digitalocean.com/community/questions/how-do-i-open-port-3306-with-ufw
	* link : https://dba.stackexchange.com/questions/64581/mysql-bind-address-0-0-0-0-in-my-cnf-does-not-work
	* link : https://gist.github.com/oinume/fc9b72bd8b14ab07e94c
	* link : ~
	
	$ sudo gedit /etc/mysql/my.cnf
		==>>
			(( Filled Later ))
		<<==
	$ sudo systemctl restart mysql
	$ sudo systemctl enable mysql
	$ mysql -u root -p


	**** Adjust the Firewall to Allow Web Traffic *****
	$ sudo ufw allow 3306/tcp
	$ sudo ufw allow 3306/udp
	
	$ sudo systemctl restart mysql
	$ sudo systemctl restart apache2
	$ sudo ufw reload
	
	***** MySQL connectors ***** 
	$ sudo apt update
	$ sudo apt install libreoffice-mysql-connector libmysql++-dev libmysql++3v5 libmysqlcppconn7v5 libmysql-java python-mysql.connector python3-mysql.connector

34. install 'PHP' 

	$ sudo apt install --install-suggests php7.0 libapache2-mod-php7.0
	
	$ sudo gedit /etc/php/7.0/apache2/php.ini
		==>>

		max_input_time = 30
		error_reporting = E_COMPILE_ERROR | E_RECOVERABLE_ERROR | E_ERROR | E_CORE_ERROR
		error_log = /var/log/php/error.log 

		<<==

	***** Give Ownership of PHP Server to Apache System User *****
	$ sudo mkdir /var/log/php
	$ sudo chown www-data /var/log/php

	$ sudo gedit /var/www/html/info.php
		==>> 
		<?php
		phpinfo();
		?>
		<<== 
	***** Another Version of PHP Server Testing *****
	$ sudo gedit /var/www/html/example.com/public_html/phptest.php 
		==>>

		<html>
		<head>
		    <title>PHP Test</title>
		</head>
		    <body>
		    <?php echo '<p>Hello World</p>';

		    // In the variables section below, replace user and password with your own MySQL credentials as created on your server
		    $servername = "localhost";
		    $username = "webuser";
		    $password = "password";

		    // Create MySQL connection
		    $conn = mysqli_connect($servername, $username, $password);

		    // Check connection - if it fails, output will include the error message
		    if (!$conn) {
			die('<p>Connection failed: <p>' . mysqli_connect_error());
		    }
		    echo '<p>Connected successfully</p>';
		    ?>
		</body>
		</html>

		<<==
	***** End of php server test code *****

	$ sudo systemctl restart apache2

	** ** Trouble Shooting ** **
	$ sudo systemctl status apache2
	$ sudo systemctl restart apache2

35. install 'PostgreSQL'
	* link : https://www.postgresql.org/download/linux/ubuntu/
	* link : 
	* link : 
	* link : 

	$ sudo apt update
	$ sudo apt upgrade
	$ sudo apt install --install-suggests postgresql-server-dev-9.5 postgresql-client-9.5 postgresql-contrib-9.5 postgresql-plpython-9.5 postgresql-plpython3-9.5 postgresql-9.5 pgadmin3*
	
	$ sudo -u postgres psql
	
	***** After PostgreSQL is successfully installed *****
	* link : http://www.kelvinwong.ca/tag/pg_hba-conf/
	* link : https://www.enterprisedb.com/docs/en/7.0/peminstguide/installation_guide.1.26.html
	* link : https://www.postgresql.org/docs/9.3/static/auth-pg-hba-conf.html
	* link : http://www.postgresdba.com/bbs/board.php?bo_table=B12&wr_id=36
	* link : http://justckh.blogspot.kr/2013/10/postgresql-ip.html
	
	* link : https://www.enterprisedb.com/docs/en/9.5/instguide/EDB_Postgres_Advanced_Server_Installation_Guide.1.41.html
	
	* psql querry 
		::>> SELECT name, setting FROM pg_settings WHERE category = 'File Locations';
			
	$ sudo gedit /etc/postgresql/9.5/main/pg_hba.conf
		==>> 
		
			(( Filled Later ))
		
		<<==
	$ sudo gedit /etc/postgresql/9.5/main/postgresql.conf
		==>>
		...
		listen_addresses = '*'
		...
		<<==
	
	$ sudo systemctl restart postgresql
	$ sudo systemctl enable postgresql
	
	
	**** Adjust the Firewall to Allow Web Traffic *****
	$ sudo ufw allow 5432/tcp
	$ sudo ufw allow 5432/udp
	
	$ sudo systemctl restart postgresql
	$ sudo ufw reload
	
	***** PostgreSQL connectors ***** 
	$ sudo apt update
	$ sudo apt install --install-suggests libghc-postgresql-libpq-dev libpqxx-4.0 libpqxx-dbg libpqxx-dev libpqxx-doc libpostgresql-jdbc-java python-psycopg2 python3-psycopg2 


36. install 'Mongo DB' 
	* link : https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/
	* link : https://www.youtube.com/watch?v=mlODdwoK56A
	* link : https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-mongodb-on-ubuntu-16-04
	* link : https://www.digitalocean.com/community/tutorials/how-to-install-mongodb-on-ubuntu-16-04
	
	$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
	$ echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
	$ sudo apt update
	$ sudo apt install --install-suggests mongodb-org*
	$ sudo apt upgrade

	***** After Mongo DB is successfully installed *****
	* link : https://www.howtoforge.com/tutorial/install-mongodb-on-ubuntu-16.04/
	* link : https://docs.mongodb.com/manual/reference/configuration-options/
	
	$ sudo gedit /etc/mongod.conf
		==>>
		
		#network interface
		net:
			~
			bind_ip : 0.0.0.0 (allowing from all IPs)
		
		<<==
		(CAUTION : first line 'security' is written without any indentation, second line 'authorization' is written after 2 spaces)
	
	If you need something to do some more on settings, 
		-> $ sudo gedit /lib/systemd/system/mongod.service
	would do the tricks.
	
	$ sudo mkdir /data
	$ sudo mkdir /data/db
	$ sudo chown -R yks93 /data
	$ sudo chown yks93 /tmp/mongodb-27017.sock
	
	***** Adjust the Firewall to Allow Web Traffic *****
	$ sudo ufw allow 27017/tcp
	$ sudo ufw allow 27017/udp
	$ sudo ufw status numbered 
	$ sudo ufw reload
	
	***** make MongoDB starts at every booting *****
	Select Unity Launcher (push windows button)
	Select Startup Applications > Add 
		> Name : Mongo DB connection
		> Command : mongod
		> Comment : open a connection to Mongo Databases
	
	***** Let's start Mongo DB *****
	$ mongod
	$ mongo
	
	***** exit mongod *****
	$ ps -aux | grep "mongod" (=pidnum)
	$ kill -15 [pidnum]
	
	***** install 'Studio 3T' *****
	
	
	
	
	***** PHP Drivers *****
	$ sudo apt update
	$ sudo apt install --install-suggests php7.0*
	
	$ sudo systemctl restart mysql
	$ sudo systemctl restart postgresql
	$ sudo systemctl restart apache2
	$ sudo ufw reload
	
*************************************************************************************************************************************






37. install 'Android Studio'
	* link : https://developer.android.com/studio/install.html
	
	Go to <https://developer.android.com/studio/index.html> and Downloads the appropriate file

	$ sudo apt update
	$ sudo apt-get install lib32z1 lib32ncurses5 lib32stdc++6
	$ sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
	
	$ cd
	$ cd Downloads
	$ 7z x android-studio-ide~
	$ ls (::the result of this command will show a new folder named 'android-studio')
	$ cp -R android-studio /home/yks93/
	$ cd
	$ cd android-studio
	$ pwd
		::= /home/yks93/android-studio
	
	$ sudo gedit /etc/environment 
		==>>
		$ANDROID_HOME=/home/yks93/android-studio
		$PATH = $PATH + $ANDROID_HOME/bin
		<<==
	
	$ sudo gedit /etc/profile.d/myenvvars.sh
		==>> 
		$ANDROID_HOME=/home/yks93/android-studio
		$PATH = $PATH + $ANDROID_HOME/bin
		<<==
	
	$ cd
	$ source .bashrc
	$ echo $PATH
	
	***** restart computer *****
	$ cd android-studio/bin
	$ bash studio.sh
		-> 'Android SDK Location -- should be : /home/yks93/android-SDK
	
	***** After finishing Initial Android-Studio Setup *****
	$ cd
	$ sudo gedit /etc/environment 
		==>>
		$SDK_HOME=/home/yks93/android-sdk
		$PATH = $PATH + $SDK_HOME/tools + $SDK_HOME/platform-tools
		<<==
	
	$ sudo gedit /etc/profile.d/myenvvars.sh
		==>>
		$SDK_HOME=/home/yks93/android-sdk
		$PATH = $PATH + $SDK_HOME/tools + $SDK_HOME/platform-tools
		<<==
	
	***** create desktop launcher for Android-Studio *****
	
	$ sudo gedit /usr/share/applications/android-studio.desktop
		==>>
		
		[Desktop Entry]
		Version=3.0
		Type=Application
		Name=Android-Studio
		GenericName=android
		Comment=Android Studio IDE for Android Application Development
		Exec=bash -c 'export PATH="$PATH" && /home/yks93/android-studio/bin/studio.sh'
		Categories=Development;Science;IDE;Qt;Education;
		Icon=/home/yks93/android-studio/bin/studio.png
		Terminal=false
		
		<<==
	
	***** Android KVM Linux Installation *****
	* link : https://developer.android.com/studio/run/emulator-acceleration.html?utm_source=android-studio#vm-linux
	* link : https://help.ubuntu.com/community/KVM/Installation 
	
	$ sudo apt update
	$ sudo apt install cpu-checker
	$ egrep -c '(vmx|svm)' /proc/cpuinfo
	$ kvm-ok
	$ sudo apt install --install-suggests qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils ia32-libs-multiarch

38. install eclipse-oxygen 
	* link : http://www.eclipse.org/downloads/eclipse-packages/ 
	* link : http://ubuntuhandbook.org/index.php/2016/01/how-to-install-the-latest-eclipse-in-ubuntu-16-04-15-10/
	
	$ cd
	$ cd Downloads
	$ tar xvfz eclipse-inst-linux64.tar.gz
	$ cd
	$ mkdir eclipse
	$ cd Downloads
	$ cp -R eclipse-installer /home/yks93/eclipse
	
	execute eclipse-installer.exe
	
	Inside Eclipse Program
		:-> Eclipse Marketplace > search 'SVN'
		:-> Restart Eclipse 
		:-> Window > Preferences > Team > SVN, click "Get connectors" 
		:-> Eclipse Marketplace > search 'PyDev' 
	
	$ sudo gedit /usr/share/applications/eclipse-cc++.desktop
		==>> 
		
		[Desktop Entry]
		Name=eclipse-cc++
		Type=Application
		Exec=/home/yks93/eclipse/cpp-oxygen/eclipse/eclipse
		Terminal=false
		Icon=/home/yks93/eclipse/cpp-oxygen/eclipse/icon.xpm
		Comment=Integrated Development Environment
		NoDisplay=false
		Categories=Development;IDE;
		Name[en]=eclipse-cc++
		
		<<==

39. install 'Visual Studio Code'
	* link : https://code.visualstudio.com/docs/setup/linux
	
	$ curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
	$ sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
	$ sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
	$ sudo apt update
	$ sudo apt install code
	
	***** Visual Studio Code extension recommends ***** (Command : code --install-extension ~)
	code --install-extension formulahendry.code-runner 
	code --install-extension eamodio.gitlens 
	code --install-extension emmanuelbeziat.vscode-great-icons 
	code --install-extension PKief.material-icon-theme 
	code --install-extension formulahendry.auto-rename-tag 
	code --install-extension formulahendry.auto-complete-tag 
	code --install-extension formulahendry.auto-close-tag 
	code --install-extension CoenraadS.bracket-pair-colorizer 
	code --install-extension joelday.docthis 
	code --install-extension donjayamanne.githistory 
	code --install-extension Anjali.clipboard-history 
	code --install-extension donjayamanne.git-extension-pack 
	code --install-extension waderyan.gitblame 
	code --install-extension felipecaputo.git-project-manager 
	code --install-extension samschneller.git-common-commands-suite 
	code --install-extension eg2.vscode-npm-script 
	code --install-extension christian-kohler.path-intellisense 
	code --install-extension Shan.code-settings-sync 
	code --install-extension wayou.vscode-todo-highlight 
	code --install-extension dkundel.vscode-new-file 
	code --install-extension steoates.autoimport 
	code --install-extension HookyQR.beautify 
	code --install-extension alefragnani.Bookmarks 
	code --install-extension qrti.funclist 
	code --install-extension vector-of-bool.cmake-tools 
	code --install-extension anseki.vscode-color 
	code --install-extension msjsdiag.debugger-for-chrome 
	code --install-extension hbenl.vscode-firefox-debug 
	code --install-extension esbenp.prettier-vscode 
	code --install-extension KnisterPeter.vscode-github 
	code --install-extension DavidAnson.vscode-markdownlint 
	code --install-extension Zignd.html-css-class-completion 
	code --install-extension donjayamanne.jupyter 
	code --install-extension Equinusocio.vsc-material-theme 
	code --install-extension ms-vsts.team 
	code --install-extension dbaeumer.vscode-eslint 
	code --install-extension eg2.tslint 
	code --install-extension shinnn.stylelint 
	
	code --install-extension ms-vscode.cpptools 
	code --install-extension ms-vscode.csharp 
	code --install-extension redhat.java 
	code --install-extension vscjava.vscode-java-debug 
	code --install-extension ms-python.python 
	code --install-extension tushortz.python-extended-snippets 
	code --install-extension bibhasdn.django-html 
	code --install-extension vsciot-vscode.vscode-arduino 
	code --install-extension johnpapa.Angular2 
	code --install-extension adelphes.android-dev-ext 
	code --install-extension abusaidm.html-snippets 
	code --install-extension Zignd.html-css-class-completion 
	code --install-extension xabikos.JavaScriptSnippets 
	code --install-extension donjayamanne.jquerysnippets 
	code --install-extension leizongmin.node-module-intellisense 
	code --install-extension mattn.Lisp 
	code --install-extension felixfbecker.php-intellisense 
	code --install-extension mohsen1.prettify-json 
	code --install-extension felixfbecker.php-debug 
	code --install-extension linyang95.php-symbols 
	code --install-extension felixfbecker.php-pack 
	code --install-extension vsmobile.vscode-react-native 
	code --install-extension rebornix.Ruby 
	code --install-extension hridoy.rails-snippets 
	code --install-extension lukehoban.Go 
	code --install-extension James-Yu.latex-workshop 
	code --install-extension Kasik96.swift 
	code --install-extension DotJoshJohnson.xml 
	
40. install 'Git'
	
	$ sudo apt update
	$ sudo apt install git
	
	$ sudo apt update
	$ sudo apt install build-essential libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip

41. install 'Anaconda'
	* link : https://poweruphosting.com/blog/install-anaconda-python-ubuntu-16-04/
	* link : https://www.digitalocean.com/community/tutorials/how-to-install-the-anaconda-python-distribution-on-ubuntu-16-04 
	* link : https://medium.com/@GalarnykMichael/install-python-on-ubuntu-anaconda-65623042cb5a 
	* link : https://hostpresto.com/community/tutorials/how-to-install-anaconda-python-on-ubuntu-16-04/ 

	$ cd /tmp
	
	Go to <https://repo.continuum.io/archive/>, look for the latest version 
	
	$ curl -O https://repo.continuum.io/archive/Anaconda3-X.X.X-Linux-x86_64.sh (the most latest version)
	$ sha256sum Anaconda3-X.X.X-Linux-x86_64.sh
	$ bash Anaconda3-X.X.X-Linux-x86_64.sh
	
	At the last message asking if you're adding path to $PATH => Answer [NO]
	Later I can use /etc/environment && /etc/profile.d/myenvvars.sh to use the global $PATH 
		$PATH = $PATH + /home/yks93/anaconda3/bin
	
	$ python -V
	$ python3 -V
	$ conda list
	$ conda create --name py3 python=3
	$ source activate py3
	$ conda list
	$ conda install anaconda
	$ conda install rstudio
	$ conda update --all
	$ conda install -c conda-forge selenium
	$ source deactivate
	
	Let's make desktop launcher for Unity 
	Go to <https://www.google.co.kr/search?q=anaconda-navigator+icon&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjQpv2yi5_YAhWBsJQKHWWtDl8Q_AUICigB&biw=1331&bih=678#imgrc=_IY1Cb5Ad-UBKM:> 
	and download the icon image .png file 
	
	$ sudo gedit /usr/share/applications/anaconda-navigator.desktop
		==>>
		
		[Desktop Entry]
		Version=1.6
		Type=Application
		Name=Anaconda-Navigator
		GenericName=Anaconda
		Comment=Anaconda Navigator of env "py3"
		Exec=bash -c 'export PATH="$PATH" && /home/yks93/anaconda3/bin/anaconda-navigator'
		Categories=Development;Science;IDE;Qt;Education;
		Icon=/home/yks93/anaconda3/anaconda-navigator-icon.png
		Terminal=false
		StartupNotify=true
		MimeType=text/x-python;
		
		<<==

42-1. install 'Vivaldi Browser'
	* link : https://www.linuxbabe.com/ubuntu/install-vivaldi-1-2-ubuntu-16-04-via-official-apt-repository 
	
	$ wget http://repo.vivaldi.com/stable/linux_signing_key.pub
	$ sudo apt-key add linux_signing_key.pub
	$ sudo gedit /etc/apt/sources.list 
		>>(append) deb http://repo.vivaldi.com/stable/deb/ stable main 
	$ sudo apt update
	$ sudo apt install vivaldi-stable

42-2. install 'Opera Browser'
	* link : https://deb.opera.com/manual.html
	
	$ sudo add-apt-repository 'deb https://deb.opera.com/opera-stable/ stable non-free'
	$ wget -qO- https://deb.opera.com/archive.key | sudo apt-key add -
	$ sudo apt update
	$ sudo apt-get install opera-stable

43-1. install 'atom' 
	* link : http://flight-manual.atom.io/getting-started/sections/installing-atom/#platform-linux
	
	$ curl -L https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -
	$ sudo sh -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list'
	$ sudo apt-get update
	$ sudo apt install --install-suggests atom
	
	***** Another way to install ATOM ***** 
	* link : http://www.elinuxbook.com/install-atom-text-editor-in-ubuntu-16-04/ 
	
	***** Fastest Method to install ATOM *****
	Download https://atom.io/download/deb 
	$ cd
	$ cd Downloads
	$ sudo apt update
	$ sudo dpkg -i atom-amd64.deb
	$ sudo apt install -f
	$ sudo dpkg -i atom-amd64.deb
	
	***** apm packages recommends ***** (Command : apm install ~)
	-> script emmet atom-beautify ask-stack git-blame git-plus git-time-machine linter project-manager highlight-selected file-icons pigments minimap expose pane-layout-plus open-recent autocomplete-paths todo-show autoclose-html auto-detect-indentation keycount color-picker javascript-snippets atom-css-comb remote-edit goto-definition merge-conflicts simple-drag-drop-text custom-title android android-debugger 

43-2. Setting Atom Editor as Swift IDE 
	* link : https://medium.com/@addamb/getting-started-with-vapor-and-swift-on-ubuntu-16-04-31a426654115 
	* link : https://www.makeuseof.com/tag/start-programming-swift-ubuntu/ 
	* link : https://swift.org/download/#releases 
	* link : https://swift.org/getting-started/#using-the-package-manager
	
	$ sudo apt update
	$ sudo apt-get install clang libicu-dev binutils
	$ cd
	$ cd Downloads
	$ tar xvfz swift- /home/yks93/
	
	add the directory /home/yks93/swift~/usr/bin to $PATH environment variables 
	
	$ source .bashrc
	$ swift --version
	$ swift
	$ print("Welcome to Swift World!")
	$ :q
	
	***** Setting ATOM editor as IOS-Swift IDE *****
	* link : https://medium.com/@Aciid/hacking-atom-to-create-a-swift-ide-that-runs-on-linux-and-mac-c7d9520a0fac
	
	$ apm install language-swift swift-debugger
	
	$ cd swift-workspace
	$ mkdir swiftProj01
	$ touch swiftProj01/main.swift
	$ touch swiftProj01/Package.swift
	$ atom swiftProj01
	
	(inside ATOM terminal) 
	# e=swiftProj01
	# p=/home/yks93/swift-4.0.3-RELEASE-ubuntu16.04/usr/bin

44. install 'intelliJ'
	* link : https://www.jetbrains.com/help/idea/install-and-set-up-intellij-idea.html
	***** Never Download intelliJ IDE from PPA something like ppa:mmk2410~*****
	
	Go to <https://www.jetbrains.com/idea/download/#section=linux> and download .tar.gz file
	
	$ cd
	$ cd Downloads
	$ tar xvfz ideaIC~.tar.gz
	$ cp -R idea-IC~ /home/yks93
	$ cd
	$ ls
	$ cd Downloads
	$ rm -R idea-IC~
	
	***** make a desktop launcher for intelliJ IDE *****
	-> launch intelliJ for the first time, then the tutorials allow the users to make desktop launcher
	
	$ cd /home/yks93/idea-IC-173.3942.27/bin
	$ bash idea.sh
	
45. install 'Star UML' 
	* link : 
	* link : 
	
	Go to <http://staruml.io/download> 
	Go to <https://launchpad.net/ubuntu/+archive/primary/+files/libgcrypt11_1.5.3-2ubuntu4.2_amd64.deb> 
	
	$ cd
	$ cd Downloads
	$ sudo apt update
	$ sudo dpkg -i libgcrypt11_1.5.3-2ubuntu4.2_amd64.deb
	$ sudo dpkg -i StarUML-v2.8.0-64-bit.deb
	
46. install 'Linux Container'
	* link : https://help.ubuntu.com/lts/serverguide/lxc.html
	
	$ sudo apt update
	$ sudo apt install --install-suggests lxc
	$ sudo apt install --install-suggests lxd
	
	
	**** LET'S START USING LINUX CONTATINER *****
	* link : https://linuxcontainers.org/lxc/getting-started/
	* link : https://blog.scottlowe.org/2013/11/25/a-brief-introduction-to-linux-containers-with-lxc/
	* link : https://askubuntu.com/questions/293275/what-is-lxc-and-how-to-get-started
	
	* link : https://www.itzgeek.com/how-tos/linux/ubuntu-how-tos/setup-linux-container-with-lxc-on-ubuntu-16-04-14-04.html
	* link : https://www.digitalocean.com/community/tutorials/how-to-set-up-and-use-lxd-on-ubuntu-16-04
	* link : https://nwgat.ninja/quick-easy-lxc-container-on-ubuntu-16-04/
	* link : https://linuxconfig.org/getting-started-with-lxd-containers-on-ubuntu-16-04

47. GUI Tools to see HARDWARE INFORMATION in Ubuntu/Debian Linux
	* link : https://www.techgainer.com/5-gui-tools-to-see-hardware-information-in-ubuntulinux/
	
	$ sudo add-apt-repository ppa:i-nex-development-team/stable
	$ sudo apt update
	$ sudo apt-get install i-nex
	
	$ sudo apt-get install hardinfo
	
	$ sudo apt-get install sysinfo
	
	$ sudo apt-get install lshw-gtk

48. 








